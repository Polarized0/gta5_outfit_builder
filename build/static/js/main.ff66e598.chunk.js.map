{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","items","id","index","prop","modalImageSrc","listCategory","listGender","allCached","item","data","gender","prefix","itemType","uri","url","this","setState","className","style","Object","keys","map","indices","getUrlFromItem","didCache","existsOnOtherGender","includes","doesExist","onClick","ev","target","tagName","toUpperCase","onItemClick","src","alt","onError","loadFails","onLoad","push","onMouseUp","category","data-id","every","cachedImages","length","mIndices","fIndices","renderModal","renderList","renderOutfitLayout","href","rel","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ff66e598.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      items: {\r\n        \"hat\": {\r\n          id: 0,\r\n          index: 0,\r\n          prop: true\r\n        },\r\n        \"ears\": {\r\n          id: 0,\r\n          index: 2,\r\n          prop: true\r\n        },\r\n        \"glasses\": {\r\n          id: 0,\r\n          index: 1,\r\n          prop: true\r\n        },\r\n        \"accessoire\": {\r\n          id: 0,\r\n          index: 7\r\n        },\r\n        \"undershirt\": {\r\n          id: 0,\r\n          index: 8\r\n        },\r\n        \"top\": {\r\n          id: 0,\r\n          index: 11\r\n        },\r\n        \"armor\": {\r\n          id: 0,\r\n          index: 9\r\n        },\r\n        \"decals\": {\r\n          id: 0,\r\n          index: 10\r\n        },\r\n        \"torso\": {\r\n          id: 0,\r\n          index: 3\r\n        },\r\n        \"watch\": {\r\n          id: 0,\r\n          index: 6,\r\n          prop: true\r\n        },\r\n        \"bracelet\": {\r\n          id: 0,\r\n          index: 7,\r\n          prop: true\r\n        },\r\n        \"legs\": {\r\n          id: 0,\r\n          index: 4\r\n        },\r\n        \"shoes\": {\r\n          id: 0,\r\n          index: 6\r\n        }\r\n      },\r\n      modalImageSrc: null,\r\n      listCategory: null,\r\n      listGender: \"M\"\r\n    };\r\n\r\n    this.allCached = false;\r\n  }\r\n\r\n  getUrlFromItem(item, data, gender, id = data.id){\r\n    const prefix = \"120px\";\r\n    const itemType = data.prop ? \"Prop\" : \"Clothing\";\r\n    const uri = prefix + \"-\" + itemType + \"_\" + gender + \"_\" + data.index + \"_\" + id + \".webp\";\r\n    return \"items/\" + item + \"/\" + (gender === \"M\" ? \"male\" : \"female\") + \"/\" + uri;\r\n  }\r\n\r\n  onItemClick(url){\r\n    this.setState({ modalImageSrc: url });\r\n  }\r\n\r\n  renderOutfitLayout(gender, allCached){\r\n    return (\r\n      <div className=\"outfit-layout\" style={ { \"visibility\": allCached ? \"visible\" : \"hidden\" } }>\r\n          { Object.keys(this.state.items).map(item => {\r\n            const items = this.state.items;\r\n            const data = items[item];\r\n            \r\n            if(!data.indices) data.indices = { \"M\": [], \"F\": [], \"matches\": [] };\r\n            if(!data[\"count\" + gender]) data[\"count\" + gender] = 0;\r\n\r\n            const url = this.getUrlFromItem(item, data, gender, data.didCache ? data.id : data[\"count\" + gender]);\r\n            const existsOnOtherGender = data.indices[gender === \"M\" ? \"F\" : \"M\"].includes(data.id);\r\n            const doesExist = data.indices[gender].includes(data.id);\r\n\r\n            return (\r\n            <div className={ (existsOnOtherGender ? \"\" : \"merge \") + item }\r\n            onClick={ ev => {\r\n              if(ev.target.tagName.toUpperCase() !== \"BUTTON\") this.onItemClick(doesExist ? url : \"not_found.png\");\r\n            } }\r\n            >\r\n\r\n              <img src={ url } alt={ item }\r\n              onError={ ev => {\r\n                if(data.didCache){\r\n                  ev.target.src = \"not_found.png\";\r\n                }else{\r\n                  data.loadFails = data.loadFails ? data.loadFails + 1 : 1;\r\n\r\n                  if(data.loadFails > 100){\r\n                    data[\"count\" + gender] = 0;\r\n                    data.didCache = true;\r\n                  }else{\r\n                    data[\"count\" + gender]++;\r\n                  }\r\n\r\n                  this.setState(items);\r\n                }\r\n              } }\r\n              onLoad={ () => {\r\n                if(!data.didCache){\r\n                  data.indices[gender].push(data[\"count\" + gender]);\r\n                  data.loadFails = 0;\r\n                  data[\"count\" + gender]++;\r\n                  this.setState(items);\r\n                }\r\n              } }/>\r\n              <div className=\"desc\">\r\n              <span>ID: { data.id }</span>\r\n              <button onClick={\r\n                () => {\r\n                  this.setState({\r\n                    listCategory: item,\r\n                    listGender: gender\r\n                  });\r\n                }\r\n              }>List</button>\r\n              </div>\r\n            </div>\r\n            );\r\n          }) }\r\n        </div>\r\n    );\r\n  }\r\n\r\n  renderModal(){\r\n    return (\r\n      <div id=\"modal\" onMouseUp={ () => this.setState({ modalImageSrc: null }) }>\r\n        <img src={ this.state.modalImageSrc } alt=\"Modal\"/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderList(){\r\n    let category = this.state.items[this.state.listCategory];\r\n    return (\r\n      <div id=\"listWrapper\" onClick={ ev => {\r\n        if(ev.target.id !== \"list\") this.setState({ listCategory: null })\r\n      } }>\r\n        <div id=\"list\">\r\n        { category.indices[this.state.listGender].map(index => {\r\n          let existsOnOtherGender = category.indices[this.state.listGender === \"M\" ? \"F\" : \"M\"].includes(index);\r\n\r\n          return (\r\n          <div className={ existsOnOtherGender ? \"\" : \"merge\" } data-id={ index }>\r\n            <img src={ this.getUrlFromItem(this.state.listCategory, category, this.state.listGender, index) } alt={ this.state.listCategory + \" \" + index } onClick={ () => {\r\n            let items = this.state.items;\r\n            category.id = index;\r\n\r\n            this.setState({\r\n              items,\r\n              listCategory: null\r\n            });\r\n          } }/>\r\n          </div>)\r\n        }) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    let allCached = Object.keys(this.state.items).every(item => this.state.items[item].didCache);\r\n\r\n    let cachedImages = 0;\r\n    for(let item in this.state.items){\r\n      if(this.state.items[item].indices) cachedImages += this.state.items[item].indices[\"M\"].length + this.state.items[item].indices[\"F\"].length; // male and female images\r\n    }\r\n\r\n    if(allCached && !this.allCached){\r\n      let { items } = this.state;\r\n\r\n      for(let item in items){\r\n        let data = items[item];\r\n        let mIndices = data.indices[\"M\"];\r\n        let fIndices = data.indices[\"F\"];\r\n\r\n        for(let index of mIndices){\r\n          if(fIndices.includes(index)) data.indices[\"matches\"].push(index);\r\n        }\r\n      }\r\n\r\n      this.allCached = true;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        { !allCached && <div id=\"loading\">Loading... { cachedImages } images cached</div> }\r\n        { this.state.modalImageSrc && this.renderModal() }\r\n        { this.state.listCategory && this.renderList() }\r\n        { this.renderOutfitLayout(\"M\", allCached) }\r\n        { this.renderOutfitLayout(\"F\", allCached) }\r\n        <div id=\"info\">\r\n          <div className=\"infoTitle\">GTA 5 Outfit Builder</div>\r\n          <div className=\"content\">\r\n            Useful reference for textures:\r\n            <br/>\r\n            <a href=\"https://docs.google.com/document/d/1O8pp41q7iR6N84BNxMzXTXMKXAwUmypvtpKX8eyqaLE/edit\" target=\"_blank\" rel=\"noopener noreferrer\">Next Gen Clothing Components</a>\r\n            <br/>\r\n            <a href=\"https://forge.plebmasters.de/clothes/\" target=\"_blank\" rel=\"noopener noreferrer\">forge.plebmasters.de</a>\r\n          </div>\r\n          <hr></hr>\r\n          <div>All the pictures of the props and components belong to <a href=\"https://rage.mp\" target=\"_blank\" rel=\"noopener noreferrer\">rage.mp</a> and are licensed under <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>.</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}