{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","items","id","index","prop","modalImageSrc","listCategory","listGender","allCached","item","data","gender","prefix","itemType","uri","url","this","setState","className","style","Object","keys","map","indices","getUrlFromItem","didCache","existsOnOtherGender","includes","doesExist","onClick","ev","target","tagName","toUpperCase","onItemClick","src","alt","onError","loadFails","onLoad","push","onMouseUp","category","data-id","every","cachedImages","length","mIndices","fIndices","renderModal","renderList","renderOutfitLayout","href","rel","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.62d26651.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      items: {\r\n        \"hat\": {\r\n          id: 0,\r\n          index: 0,\r\n          prop: true\r\n        },\r\n        \"ears\": {\r\n          id: 0,\r\n          index: 2,\r\n          prop: true\r\n        },\r\n        \"glasses\": {\r\n          id: 0,\r\n          index: 1,\r\n          prop: true\r\n        },\r\n        \"accessoire\": {\r\n          id: 0,\r\n          index: 7\r\n        },\r\n        \"undershirt\": {\r\n          id: 0,\r\n          index: 8\r\n        },\r\n        \"top\": {\r\n          id: 0,\r\n          index: 11\r\n        },\r\n        \"armor\": {\r\n          id: 0,\r\n          index: 9\r\n        },\r\n        \"decals\": {\r\n          id: 0,\r\n          index: 10\r\n        },\r\n        \"torso\": {\r\n          id: 0,\r\n          index: 3\r\n        },\r\n        \"watch\": {\r\n          id: 0,\r\n          index: 6,\r\n          prop: true\r\n        },\r\n        \"bracelet\": {\r\n          id: 0,\r\n          index: 7,\r\n          prop: true\r\n        },\r\n        \"legs\": {\r\n          id: 0,\r\n          index: 4\r\n        },\r\n        \"shoes\": {\r\n          id: 0,\r\n          index: 6\r\n        }\r\n      },\r\n      modalImageSrc: null,\r\n      listCategory: null,\r\n      listGender: \"M\"\r\n    };\r\n\r\n    this.allCached = false;\r\n  }\r\n\r\n  getUrlFromItem(item, data, gender, id = data.id) {\r\n    const prefix = \"120px\";\r\n    const itemType = data.prop ? \"Prop\" : \"Clothing\";\r\n    const uri = prefix + \"-\" + itemType + \"_\" + gender + \"_\" + data.index + \"_\" + id + \".webp\";\r\n    return \"items/\" + item + \"/\" + (gender === \"M\" ? \"male\" : \"female\") + \"/\" + uri;\r\n  }\r\n\r\n  onItemClick(url) {\r\n    this.setState({ modalImageSrc: url });\r\n  }\r\n\r\n  renderOutfitLayout(gender, allCached) {\r\n    return (\r\n      <div className=\"outfit-layout\" style={{ \"visibility\": allCached ? \"visible\" : \"hidden\" }}>\r\n        {Object.keys(this.state.items).map(item => {\r\n          const items = this.state.items;\r\n          const data = items[item];\r\n\r\n          if (!data.indices) data.indices = { \"M\": [], \"F\": [], \"matches\": [] };\r\n          if (!data[\"count\" + gender]) data[\"count\" + gender] = 0;\r\n\r\n          const url = this.getUrlFromItem(item, data, gender, data.didCache ? data.id : data[\"count\" + gender]);\r\n          const existsOnOtherGender = data.indices[gender === \"M\" ? \"F\" : \"M\"].includes(data.id);\r\n          const doesExist = data.indices[gender].includes(data.id);\r\n\r\n          return (\r\n            <div className={(existsOnOtherGender ? \"\" : \"merge \") + item}\r\n              onClick={ev => {\r\n                if (ev.target.tagName.toUpperCase() !== \"BUTTON\") this.onItemClick(doesExist ? url : \"not_found.png\");\r\n              }}\r\n            >\r\n\r\n              <img src={url} alt={item}\r\n                onError={ev => {\r\n                  if (data.didCache) {\r\n                    ev.target.src = \"not_found.png\";\r\n                  } else {\r\n                    data.loadFails = data.loadFails ? data.loadFails + 1 : 1;\r\n\r\n                    if (data.loadFails > 100) {\r\n                      data[\"count\" + gender] = 0;\r\n                      data.didCache = true;\r\n                    } else {\r\n                      data[\"count\" + gender]++;\r\n                    }\r\n\r\n                    this.setState(items);\r\n                  }\r\n                }}\r\n                onLoad={() => {\r\n                  if (!data.didCache) {\r\n                    data.indices[gender].push(data[\"count\" + gender]);\r\n                    data.loadFails = 0;\r\n                    data[\"count\" + gender]++;\r\n                    this.setState(items);\r\n                  }\r\n                }} />\r\n              <div className=\"desc\">\r\n                <span>ID: {data.id}</span>\r\n                <button onClick={\r\n                  () => {\r\n                    this.setState({\r\n                      listCategory: item,\r\n                      listGender: gender\r\n                    });\r\n                  }\r\n                }>List</button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderModal() {\r\n    return (\r\n      <div id=\"modal\" onMouseUp={() => this.setState({ modalImageSrc: null })}>\r\n        <img src={this.state.modalImageSrc} alt=\"Modal\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderList() {\r\n    let category = this.state.items[this.state.listCategory];\r\n    return (\r\n      <div id=\"listWrapper\" onClick={ev => {\r\n        if (ev.target.id !== \"list\") this.setState({ listCategory: null })\r\n      }}>\r\n        <div id=\"list\">\r\n          {category.indices[this.state.listGender].map(index => {\r\n            let existsOnOtherGender = category.indices[this.state.listGender === \"M\" ? \"F\" : \"M\"].includes(index);\r\n\r\n            return (\r\n              <div className={existsOnOtherGender ? \"\" : \"merge\"} data-id={index}>\r\n                <img src={this.getUrlFromItem(this.state.listCategory, category, this.state.listGender, index)} alt={this.state.listCategory + \" \" + index} onClick={() => {\r\n                  let items = this.state.items;\r\n                  category.id = index;\r\n\r\n                  this.setState({\r\n                    items,\r\n                    listCategory: null\r\n                  });\r\n                }} />\r\n              </div>)\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let allCached = Object.keys(this.state.items).every(item => this.state.items[item].didCache);\r\n\r\n    let cachedImages = 0;\r\n    for (let item in this.state.items) {\r\n      if (this.state.items[item].indices) cachedImages += this.state.items[item].indices[\"M\"].length + this.state.items[item].indices[\"F\"].length; // male and female images\r\n    }\r\n\r\n    if (allCached && !this.allCached) {\r\n      let { items } = this.state;\r\n\r\n      for (let item in items) {\r\n        let data = items[item];\r\n        let mIndices = data.indices[\"M\"];\r\n        let fIndices = data.indices[\"F\"];\r\n\r\n        for (let index of mIndices) {\r\n          if (fIndices.includes(index)) data.indices[\"matches\"].push(index);\r\n        }\r\n      }\r\n\r\n      this.allCached = true;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {!allCached && <div id=\"loading\">Loading... {cachedImages} images cached</div>}\r\n        {this.state.modalImageSrc && this.renderModal()}\r\n        {this.state.listCategory && this.renderList()}\r\n        {this.renderOutfitLayout(\"M\", allCached)}\r\n        {this.renderOutfitLayout(\"F\", allCached)}\r\n        <div id=\"info\">\r\n          <div className=\"infoTitle\">GTA 5 Outfit Builder</div>\r\n          <div className=\"content\">\r\n            <b>Find item textures here</b>:\r\n            <br />\r\n            <br />\r\n            <a href=\"https://github.com/OnlyMisT/VtextureLookup\" target=\"_blank\" rel=\"noopener noreferrer\">VtextureLookup</a>\r\n            <br />\r\n            <a href=\"https://docs.google.com/document/d/1O8pp41q7iR6N84BNxMzXTXMKXAwUmypvtpKX8eyqaLE/edit\" target=\"_blank\" rel=\"noopener noreferrer\">Next Gen Clothing Components</a>\r\n            <br />\r\n            <a href=\"https://forge.plebmasters.de/clothes/\" target=\"_blank\" rel=\"noopener noreferrer\">forge.plebmasters.de</a>\r\n            <br />\r\n            <br />\r\n          </div>\r\n          <hr></hr>\r\n          <div>Pictures of the props and components belong to <a href=\"https://rage.mp\" target=\"_blank\" rel=\"noopener noreferrer\">rage.mp</a> and are licensed under <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\" rel=\"noopener noreferrer\">CC BY-NC-SA 4.0</a>. Pictures of adversary body armor are from: <a href=\"https://x3t-infinity.com/\" target=\"_blank\" rel=\"noopener noreferrer\">X3T-Infinity</a>.</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}